%text-truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

%text-inline-link {
  text-decoration: underline solid black;
  text-underline-offset: 0.3em;
  transition: text-underline-offset 0.1s ease-in-out;

  &:hover {
    color: $color__text-primary-black;
    text-underline-offset: 0.2em;
  }
}

// Todo: Should be removed. Use @mixin u-extending-underline-style instead.
%title-underline {
  position: relative;
  &::before {
    position: absolute;
    content: "";
    top: 1.3em;
    left: $s-sm;
    right: $s-sm;
    height: 0.4em;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    // stylelint-disable -- Stylelint really does not enjoy embedded IMGs.
    background-image: url('data:image/svg+xml,<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 852.2 17" style="enable-background:new 0 0 852.2 17;" xml:space="preserve"><style type="text/css">.st0{fill:none;stroke:%23000000;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;}</style><path class="st0" d="M7.9,8.7c52-1.3,131.1-3,227.7-4.3c83.7-1.1,243.5,1.2,325.2,4.3c43.3,1.6,166.2-4.9,284.4-2.7"/></svg>');
    // stylelint-enable
  }
}

// Todo: Should be removed. Use @mixin u-extending-underline-style instead.
%title-underline--narrow {
  @extend %title-underline;

  &::before {
    width: 80px;
    right: auto;
    // stylelint-disable -- Stylelint really does not enjoy embedded IMGs.
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="81" height="16" viewBox="0 0 81 16" fill="none"><path d="M3 10C29.8561 3.71312 50.1886 4.9889 78 5.35819" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>');
    // stylelint-enable
  }
}

@mixin link-tag {
  @include typography($typo__body-placeholder);

  text-decoration: none;
  color: $color__text-primary-black;
  display: inline-block;
  width: fit-content;

  // Hide arrow
  &::after {
    display: block;
    content: "";
    border-bottom: solid 1px;
    transform: scaleX(1);
    transition: transform 300ms ease-in-out;
    transform-origin: 100% 50%;
    padding-bottom: 2px;
  }

  // Show arrow on hover
  &:hover::after {
    transform: scaleX(0);
    transform-origin: 100% 0;
  }
}

%link-tag {
  @include link-tag;
}

%button-link {
  @extend %link-tag;

  @include typography($typo__body-small);
}

@mixin identity-placeholder($paddings: $placeholder-paddings) {
  background-color: var(--tint-color-120);
  border: $s-lg solid $color__identity-primary;

  @each $breakpoint-name, $width in $paddings {
    @include media-query__name($breakpoint-name) {
      border-width: $width;
    }
  }
}

%identity-placeholder {
  @include identity-placeholder;
}

%identity-placeholder-text {
  @include typography($typo__card-placeholder--medium);
  @extend %identity-placeholder-inner-padding;
  display: flex;
  height: 100%;
  overflow: hidden;

  align-items: end;
  color: $color__text-primary-white;
}

%default-focus-visible {
  &:focus-visible {
    outline: 2px solid $color__text-primary-black;
  }
}

%identity-placeholder-pseudo {
  background-color: var(--tint-color-120);
  position: relative;

  &::before {
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;
    width: calc(100% - $s-2xl);
    height: calc(100% - $s-2xl);
    transform: translate(-50%, -50%);
    z-index: 1;
    background-color: $color__identity-primary;
  }
}

%identity-placeholder-inner-padding {
  @each $breakpoint-name, $width in $placeholder-paddings {
    @include media-query__name($breakpoint-name) {
      padding: $width * 0.5;
    }
  }
}

%identity-pagefold {
  position: relative;

  &::before {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    border-bottom: solid var(--tint-color-120);
    border-left: solid $color__page-bg;

    @each $breakpoint-name, $width in $placeholder-paddings {
      @include media-query__name($breakpoint-name) {
        border-bottom-width: $width * 0.75;
        border-left-width: $width * 0.75;
      }
    }
  }
}
